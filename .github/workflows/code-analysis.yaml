name: Code Analysis
on: push
jobs:
  pylint:
    runs-on: ubuntu-latest
    env:
      home_dir: /home/runner/work/LB-analysis-framework/LB-analysis-framework

    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        run: |
          sudo apt-get update && sudo apt-get upgrade -y

      - name: Python Setup
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          cd ${{ env.home_dir }}
          python -m pip install --upgrade pip
          pip install -r requirements-3.8.txt
          pip install anybadge

      - name: Register pylint problem matcher
        run: |
          echo "::add-matcher::.github/workflows/matchers/pylint-warning.json"
          echo "::add-matcher::.github/workflows/matchers/pylint-error.json"

      - name: Run pylint
        run: |
          cd ${{ env.home_dir }}
          mkdir -p output
          pylint --rcfile=.pylintrc --output-format=text,text:output/pylint-report.txt src
          echo $(tail -n 2 output/pylint-report.txt) >> "$GITHUB_OUTPUT"
        continue-on-error: true

      - name: Upload pylint report
        uses: actions/upload-artifact@v3
        with:
          name: pylint-report
          path: output/pylint-report.txt
          retention-days: 1

      - name: Generate pylint badge
        run: |
          cd ${{ env.home_dir }}
          score=$(tail -n 2 output/pylint-report.txt | sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p')
          anybadge -l pylint -v $score -f output/pylint.svg 2=red 4=orange 8=yellow 10=green

      - name: Upload pylint badge
        uses: actions/upload-artifact@v3
        with:
          name: pylint-badge
          path: output/pylint.svg
          retention-days: 1
          

